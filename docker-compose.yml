services:
    traefik:
        image: traefik:v3.1.4
        container_name: traefik
        restart: always
        ports:
            - '80:80'
        volumes:
            - ./traefik/traefik.yml:/etc/traefik/traefik.yml
            - ./traefik/dynamic/:/etc/traefik/dynamic
            - ./traefik/access.log:/var/log/traefik/access.log
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - docker
            - traefik
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik-dashboard.rule=Host(`traefik.localhost`)
            - traefik.http.routers.traefik-dashboard.service=api@internal
            - traefik.http.routers.traefik-dashboard.entrypoints=web

    portainer:
        image: portainer/portainer-ce:2.21.3
        container_name: portainer
        restart: always
        command: --http-enabled
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer:/data
        networks:
            - traefik
        labels:
            - traefik.enable=true
            - traefik.http.routers.portainer.rule=Host(`portainer.localhost`)
            - traefik.http.routers.portainer.entrypoints=web
            - traefik.http.services.portainer-service.loadbalancer.server.port=9000

    mysql:
        image: mysql:8
        container_name: mysql
        restart: always
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: null
            MYSQL_DATABASE: phpmyadmin
            MYSQL_USER: pma
            MYSQL_PASSWORD: pmapass
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
        volumes:
            - mysql:/var/lib/mysql
        networks:
            - docker
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
            retries: 3
            timeout: 5s

    postgres:
        image: postgres:17
        container_name: postgres
        shm_size: 128mb
        restart: always
        ports:
            - 5432:5432
        environment:
            PGPASSWORD: password
            POSTGRES_DB: docker
            POSTGRES_USER: docker
            POSTGRES_PASSWORD: password
        volumes:
            - postgres:/var/lib/postgresql/data
        networks:
            - docker
        healthcheck:
            test: ['CMD', 'pg_isready', '-q', '-d', 'docker', '-U', 'docker']
            retries: 3
            timeout: 5s

    redis:
        image: redis:7.4-alpine
        container_name: redis
        restart: always
        ports:
            - 6379:6379
        volumes:
            - redis:/data
        networks:
            - docker
        command: redis-server --loglevel warning
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    mailpit:
        image: axllent/mailpit:v1.20.4
        container_name: mailpit
        restart: always
        ports:
            - 1025:1025
        environment:
            MP_DATABASE: /data/mailpit.db
            # MP_UI_AUTH_FILE: /data/authfile # .htaccess format
            TZ: Asia/Karachi
        volumes:
            - mailpit:/data
        networks:
            - docker
            - traefik
        labels:
            - traefik.enable=true
            - traefik.http.routers.mailpit.rule=Host(`mailpit.localhost`)
            - traefik.http.routers.mailpit.entrypoints=web
            - traefik.http.services.mailpit-service.loadbalancer.server.port=8025

    phpmyadmin:
        image: phpmyadmin:5.2.1-apache
        container_name: phpmyadmin
        restart: always
        environment:
            PMA_ABSOLUTE_URI: http://phpmyadmin.localhost
            PMA_HOST: host.docker.internal
            PMA_USER: root
            PMA_PASSWORD: null
            PMA_PMADB: phpmyadmin
            PMA_CONTROLUSER: pma
            PMA_CONTROLPASS: pmapass
            UPLOAD_LIMIT: 128M
        networks:
            - traefik
        labels:
            - traefik.enable=true
            - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)
            - traefik.http.routers.phpmyadmin.entrypoints=web
            - traefik.http.services.phpmyadmin-service.loadbalancer.server.port=80
        depends_on:
            - mysql

    soketi:
        image: quay.io/soketi/soketi:latest-16-alpine
        container_name: soketi
        restart: always
        environment:
            SOKETI_DEBUG: true
            SOKETI_METRICS_SERVER_PORT: 9601
            SOKETI_DB_REDIS_HOST: redis
            SOKETI_DB_REDIS_KEY_PREFIX: soketi
        networks:
            - docker
            - traefik
        labels:
            - traefik.enable=true
            - traefik.tcp.routers.soketi.entrypoints=web
            - traefik.http.routers.soketi.rule=Host(`soketi.localhost`)
            - traefik.http.routers.soketi.entrypoints=web
            - traefik.http.routers.soketi.service=soketi-service
            - traefik.http.services.soketi-service.loadbalancer.server.port=6001
            - traefik.http.routers.soketi-metrics.rule=Host(`metrics.soketi.localhost`)
            - traefik.http.routers.soketi-metrics.entrypoints=web
            - traefik.http.routers.soketi-metrics.service=soketi-metrics-service
            - traefik.http.services.soketi-metrics-service.loadbalancer.server.port=9601

    mongodb:
        image: mongodb/mongodb-community-server:8.0.1-ubuntu2204
        container_name: mongodb
        restart: always
        ports:
            - 27017:27017
        volumes:
            - mongodb:/data/db
        networks:
            - docker
        healthcheck:
            test:
                - CMD
                - mongosh
                - 'mongodb://localhost:27017/admin'
                - '--eval=db.runCommand({ping:1})'
            retries: 3
            timeout: 5s

networks:
    docker:
        external: true
    traefik:
        external: true

volumes:
    portainer:
    mailpit:
    redis:
    mysql:
    mongodb:
    postgres:
